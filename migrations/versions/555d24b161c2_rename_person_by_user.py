"""Rename person by user

Revision ID: 555d24b161c2
Revises: 4d72f8f6a699
Create Date: 2022-11-09 15:26:58.695565

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '555d24b161c2'
down_revision = '4d72f8f6a699'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.Column('first_name', sa.String(length=200), nullable=True),
    sa.Column('last_name', sa.String(length=200), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('photo_url', sa.String(length=200), nullable=False),
    #sa.Column('user_type', sa.Enum('user', 'admin', name='usertype'), server_default='user', nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    # ### Bug Alembic - please adjust! ###
    usertype_enum = postgresql.ENUM('user', 'admin', name='usertype', create_type=False)
    usertype_enum.create(op.get_bind(), checkfirst=True)
    op.add_column('users', sa.Column('user_type', usertype_enum, server_default='user', nullable=False )),
    # ### Bug

    op.add_column('owners', sa.Column('user_id', sa.Integer(), nullable=False))
    op.drop_constraint('owners_person_id_fkey', 'owners', type_='foreignkey')
    op.create_foreign_key(None, 'owners', 'users', ['user_id'], ['id'])
    op.drop_column('owners', 'person_id')
    op.add_column('renters', sa.Column('user_id', sa.Integer(), nullable=False))
    op.drop_constraint('renters_person_id_fkey', 'renters', type_='foreignkey')
    op.create_foreign_key(None, 'renters', 'users', ['user_id'], ['id'])
    op.drop_column('renters', 'person_id')
    
    op.drop_table('persons')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('renters', sa.Column('person_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'renters', type_='foreignkey')
    op.create_foreign_key('renters_person_id_fkey', 'renters', 'persons', ['person_id'], ['id'])
    op.drop_column('renters', 'user_id')
    op.add_column('owners', sa.Column('person_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'owners', type_='foreignkey')
    op.create_foreign_key('owners_person_id_fkey', 'owners', 'persons', ['person_id'], ['id'])
    op.drop_column('owners', 'user_id')
    op.create_table('persons',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('photo_url', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('user_type', postgresql.ENUM('user', 'admin', name='usertype'), server_default=sa.text("'user'::usertype"), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='persons_pkey'),
    sa.UniqueConstraint('email', name='persons_email_key')
    )
    op.drop_table('users')
    # ### end Alembic commands ###
